<!DOCTYPE html>
<html>
<head>
    <title>DeChess</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.2/chess.js"></script>
    <script src="https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-aFq/bzH65dt+w6FI2ooMVUpc+21e0SRygnTpmBvdBgSdnuTN7QbdgL+OapgHtvPp" crossorigin="anonymous">
    <style>
        #board {
            width: 700px;
            height: 700px;
        }
    </style>
</head>
<body class="bg-dark">
<div class="row mx-4">
    <div class="col-md-2">
        <% if (loggedInUser.id !== -1) { %>
            <div class="row text-start">
                <p class="text-white mt-4">Logged in as <%= loggedInUser.username %></p>
            </div>
        <% } else { %>
            <div class="row text-start">
                <a class="btn btn-primary mt-4 w-50" href="/login">Login</a>
            </div>
            <div class="row">
                <p class="text-white mt-4">Logged in as Guest</p>
            </div>
        <% } %>
        <div class="row">
            <ul></ul>
        </div>
    </div>
    <div class="col-md-8 mx-auto mt-4">
        <div class="row">
            <h1 class="display-2 text-white text-center">DeChess</h1>
        </div>
        <div class="row">
            <div id="board" class="mx-auto"></div>
            <div class="text-center">
                <a href="#" id="restartbtn" class="btn btn-lg btn-danger">Restart</a>
            </div>
        </div>
    </div>
    <div class="col-md-2">

    </div>
</div>
<script>
    // Create a new board
    var board = null
    var game = new Chess()
    var whiteSquareGrey = '#a9a9a9'
    var blackSquareGrey = '#696969'

    function removeGreySquares() {
        $('#myBoard .square-55d63').css('background', '')
    }

    function greySquare(square) {
        var $square = $('#myBoard .square-' + square)

        var background = whiteSquareGrey
        if ($square.hasClass('black-3c85d')) {
            background = blackSquareGrey
        }

        $square.css('background', background)
    }

    function onDragStart(source, piece) {
        // do not pick up pieces if the game is over
        if (game.game_over()) return false

        // or if it's not that side's turn
        if ((game.turn() === 'w' && piece.search(/^b/) !== -1) ||
            (game.turn() === 'b' && piece.search(/^w/) !== -1)) {
            return false
        }
    }

    function onDrop(source, target) {
        removeGreySquares()

        // see if the move is legal
        var move = game.move({
            from: source,
            to: target,
            promotion: 'q' // NOTE: always promote to a queen for example simplicity
        })

        // illegal move
        if (move === null) {
            return 'snapback'
        } else {
            // Send the new board to the server
            ws.send(game.fen());
        }

        const moves = game.moves();
        const randomMove = moves[Math.floor(Math.random() * moves.length)];
        console.log(randomMove);
    }

    function onMouseoverSquare(square, piece) {
        // get list of possible moves for this square
        var moves = game.moves({
            square: square,
            verbose: true
        })

        // exit if there are no moves available for this square
        if (moves.length === 0) return

        // highlight the square they moused over
        greySquare(square)

        // highlight the possible squares for this piece
        for (var i = 0; i < moves.length; i++) {
            greySquare(moves[i].to)
        }
    }

    function onMouseoutSquare(square, piece) {
        removeGreySquares()
    }

    function onSnapEnd() {
        board.position(game.fen())
    }

    var config = {
        draggable: true,
        position: 'start',
        onDragStart: onDragStart,
        onDrop: onDrop,
        onMouseoutSquare: onMouseoutSquare,
        onMouseoverSquare: onMouseoverSquare,
        onSnapEnd: onSnapEnd,
        pieceTheme: '/img/chesspieces/wikipedia/{piece}.png'
    }
    board = Chessboard('board', config)

    // Create a new WebSocket connection
    var ws = new WebSocket('ws://localhost:25056');

    // Handle WebSocket errors
    ws.onerror = function (event) {
        console.error('WebSocket error:', event);
    };

    ws.onmessage = function (event) {
        console.log(`${event.data}`);
        let move = `${event.data}`;
        console.log('Received move:', move);
        let from = move.substring(0, 2);
        let to = move.substring(2, 4);
        game.move({from: from, to: to});
        board.position(game.fen());
    };

    $('#restartbtn').click(function () {
        board.start();
        game.reset();
    });
</script>
</body>
</html>